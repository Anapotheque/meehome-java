<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init();" styleName="generaliPanel"
	xmlns:validation="com.generali.views.validation.*" >
	
	<mx:Script>
		<![CDATA[
			import mx.utils.ObjectUtil;
			import mx.formatters.DateFormatter;
			
			import com.flexriver.common.validators.FlexriverValidators;
			import com.flexriver.common.utils.FlexriverUtils;
			
			import com.generali.volCambriolage.model.AppModel;
	  		import com.generali.events.ui.NextSectionEvent;
	  		import com.generali.model.InsuredVO;
	  		
	  		import com.generali.utils.Util;
	  		import com.generali.utils.Message;
	  		import com.generali.utils.Color;
	  		
	  		[Bindable]
	 		private var _disabledRanges:Array;
	 		
	 		[Bindable]
	  		private var _appModel:AppModel = AppModel.getInstance();
	  		
	  		[Bindable]
	  		private var _firstEntryStolenGoods:Boolean = true;
	  		
	  		[Bindable]
	  		private var _firstEntryDescription:Boolean = true;
	  		private var _currentDate:Date;
	  		
	  		private function init():void {
	  			_currentDate = new Date();
	  			initCalendar();
	  			showHideAddress();
	  		}
	  		
	  		private function initCalendar():void {	  		  			
	  			txtAccidentDate.disabledRanges = Util.getDisabledRangeDays();
	  		}
	  		
	  		private function fillModel():void {
	  			_appModel.accident.accidentDate = txtAccidentDate.text;
	  			_appModel.residence.main_residence = _appModel.residence.main_residence;
	  			_appModel.residence.address.addressVal = address.text;
	  			_appModel.residence.address.postal_code = postal_code.text;
	  			_appModel.residence.address.city = city.text;	  			
	  			_appModel.accident.occupant = rdOccupant1.selected;
	  			if (rdOccupant2.selected) {
	  				_appModel.accident.timeAway = txtTimeAway.text;
	  			}
	  			else {
	  				_appModel.accident.timeAway = "";
	  			}
	  			
	  			_appModel.accident.mode1 = mode1.selected;
	  			_appModel.accident.mode2 = mode2.selected;
	  			_appModel.accident.mode3 = mode3.selected;
	  			_appModel.accident.mode5 = mode5.selected;
	  			_appModel.accident.mode6 = mode6.selected;	  			
	  			_appModel.accident.otherMode = txtOtherMode.text;	
	  			  			
	  			if (!_firstEntryDescription) {
	  				_appModel.accident.description = txtDescription.text;
	  			}
	  			if (!_firstEntryStolenGoods) {
	  				_appModel.accident.stolenGoods = txtStolenGoods.text;
	  			}
	  			
	  			_appModel.accident.claim = rdClaim1.selected;	  				
	  		}
	  		
	  		private function prev():void {	
	  			fillModel();  			 
	  			parentApplication.dispatchEvent( new NextSectionEvent(NextSectionEvent.TO_INSURED));
	  		}
	  		
	  		// Validation de l'adresse saisie
	  		private function validation_adresse():void{
	  			
  				// Verification de la saisie d'une adresse
  				if (address.text == "" ) {
  					txtError.addError(Message.MSG_EMPTY_ADDRESS);
  					address.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
  				}else{
  					address.setStyle("backgroundColor",Color.VALIDATION_OK_COLOR);
  				}
  				
  				// Verification que le code postal est composé de 5 chiffres si saisi
  				if (postal_code.text != "" && (!FlexriverValidators.is5Digits(postal_code.text) || postal_code.text.length != 5)) {
  					txtError.addError(Message.MSG_BAD_ZIPCODE);
  					postal_code.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
				}
  				// Verification de la saisie d'un code postal
  				else if (postal_code.text == "") {
  					txtError.addError(Message.MSG_EMPTY_ZIPCODE);
  					postal_code.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
  				}else{
  					postal_code.setStyle("backgroundColor",Color.VALIDATION_OK_COLOR);
  				}
  				
  				// Verification de la saisie d'une ville
  				if (city.text == "" ) {
  					txtError.addError(Message.MSG_EMPTY_CITY);
  					city.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
  				}else{
  					city.setStyle("backgroundColor",Color.VALIDATION_OK_COLOR);
  				}
	  		}
	  		
	  		// Verification de la saisie d'une date de sinistre
	  		private function validation_dateSinistre():void{
	  			if (txtAccidentDate.text != "" ) {
  					if (!FlexriverValidators.isValidDate(txtAccidentDate.text)) {
  						txtError.addError(Message.MSG_FORMAT_DATE);
  						txtAccidentDate.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
  					} else {
  						var i:int = mx.utils.ObjectUtil.dateCompare(FlexriverUtils.toDate(txtAccidentDate.text) , _currentDate);
			  			if(i==1) {
			  				txtError.addError(Message.MSG_BAD_DATE);
			  				txtAccidentDate.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);	
			  			} else {
			  				txtAccidentDate.setStyle("backgroundColor",Color.VALIDATION_OK_COLOR);
			  			}
  					}
	  			} else {
	  				txtError.addError(Message.MSG_EMPTY_DATE);
	  				txtAccidentDate.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);	
	  			}
	  		}
	  		
	  		private function next():void {
	  		 	
	  		 	txtError.prepare_validation();
	  		 	
	  		 	// Verification si on n'a selectionné résidence principale
	  			if(!_appModel.residence.main_residence) 
	  				validation_adresse();
	  			
				// Verification de la saisie d'une date de sinistre
	  			validation_dateSinistre();
	  			
	  			if (!txtError.play()) {
	  				fillModel();
	  				parentApplication.dispatchEvent( new NextSectionEvent(NextSectionEvent.TO_RECAP));
	  			} 
	  		}		
		   
		   private function formatDate():void {		     	
		        if(FlexriverValidators.isValidDate(txtAccidentDate.text)) {
	          		dateValidation.visible = true;
	          		dateValidation.setStyle("backgroundColor",Color.VALIDATION_ERR_COLOR);
	          	} else {
	          		dateValidation.setStyle("backgroundColor",Color.VALIDATION_OK_COLOR);
	          		dateValidation.visible =false;
	          	}		           
		   }
		   
			private function clearDefaultValueStolenGoods():void {
				if(_firstEntryStolenGoods) {
					 this.txtStolenGoods.text = "";
					 txtStolenGoods.setStyle("color","black");
					 _firstEntryStolenGoods=false;
				} 
			}
	    
	    	private function clearDefaultValueDescription():void {
				if(_firstEntryDescription) {
					this.txtDescription.text = "";
					txtDescription.setStyle("color","black");
					_firstEntryDescription=false;
				} 
			}
			
			private function showHideTextPlainte():void {
				if(rdClaim1.selected)
					h8.visible = false;
				else
					h8.visible = true;
			}
			
			private function showHideAddress():void {
	  			if (_appModel.residence.address.city != "") {
	  				this.currentState = 'showResidenceAvecDetailContrat';
	  				
	  				if (_appModel.residence.main_residence == true ) {
	  					this.lblResidence.text = "Il s'agit de ma résidence principale"
	  				} else  {
	  					this.lblResidence.text = "Il s'agit de ma résidence secondaire"	
	  				}  				
	  				
	  				this.address.enabled = false
	  				this.postal_code.enabled = false
	  				this.city.enabled = false
	  				this.address.text = _appModel.residence.address.addressVal;
	  				this.postal_code.text = _appModel.residence.address.postal_code;
	  				this.city.text = _appModel.residence.address.city;
	  				showAddressTransition.play();
	  			} else {
	  				this.currentState = 'showResidenceSansDetailContrat';
	  				this.main_residence.enabled = true;
	  				if (_appModel.residence.main_residence == true ){
	  					hideAddressTransition.play();
	  				}else{
	  					showAddressTransition.play();	
	  				}
	  			}
		  	}
	
		  	private function showHideOtherMode():void {
		  		if(mode6.selected)
		  			autreMode.visible = true;
		  		else
		  			autreMode.visible = false;	
		  	}
		  	
		  	private function showHideTimeAway():void {
		  		if (rdOccupant2.selected)
		  			 shoTimeAwayTransition.play();
		  		else 
		  			 hideTimeAwayTransition.play();
		  	}
		  	
		private function showBlockAddress():void {
			if(this.main_residence.selected){
				_appModel.residence.main_residence = true;
				hideAddressTransition.play();
			} else {
				_appModel.residence.main_residence = false;
				showAddressTransition.play();
			}
		}
		  	
		]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="showResidenceSansDetailContrat">		   
			 <mx:AddChild relativeTo="{blocAdresse}" position="before">
				<mx:HBox width="100%" horizontalGap="0">
					<mx:CheckBox selected="{_appModel.residence.main_residence}" enabled="false" id="main_residence" styleName="simpleBold" label="Il s'agit de ma résidence principale" click="showBlockAddress()" />
				</mx:HBox>		
	       	</mx:AddChild>
		</mx:State>
		<mx:State name="showResidenceAvecDetailContrat">		   
			 <mx:AddChild relativeTo="{blocAdresse}" position="before">
				<mx:HBox width="100%" horizontalGap="0">
					<mx:Label id="lblResidence" text="Il s'agit de ma résidence principale"/>
				</mx:HBox>		
	       	</mx:AddChild>
		</mx:State>
	</mx:states>	
	
	<mx:Sequence id="shoTimeAwayTransition" target="{hDureAbscence}">
		<mx:SetPropertyAction name="visible" value="true" />
		<mx:Resize heightTo="25" duration="500" />
	</mx:Sequence>	
	
	<mx:Parallel id="hideTimeAwayTransition" target="{hDureAbscence}">
		<mx:SetPropertyAction name="visible" value="false" />
		<mx:Resize   heightTo="0" duration="500" />			
	</mx:Parallel>

     <mx:Sequence id="showAddressTransition" target="{S3}">
		<mx:SetPropertyAction name="visible" value="true" />
		<mx:Resize heightTo="123" duration="500" />
	 </mx:Sequence>	
	 
	 <mx:Parallel id="hideAddressTransition" target="{S3}">
		<mx:SetPropertyAction name="visible" value="false" />
		<mx:Resize   heightTo="-2" duration="500" />			
	 </mx:Parallel>

	<!-- Affichage des messages d'erreurs -->
	<validation:GeneraliValidator id="txtError" styleName="ErrorVal"  width="88%" color="red"/>
	
	<!-- Bloque d'affichae du bien concerné par le sinistre -->
	<mx:Spacer height="10" />
	<mx:HBox horizontalGap="0" width="82%">
		<mx:Image source="@Embed('assets/fred/icone_bien.swf')"  />
		<mx:Canvas >
			<mx:Image verticalCenter="1.5" source="@Embed('assets/fred/barre_bleue_titre2.swf')"/>
			<mx:Text text="LE BIEN CONCERNE :" verticalCenter="2.5" horizontalCenter="-225" styleName="imageText"/>
		</mx:Canvas>
	</mx:HBox>	
	
	<!-- Bloque d'affichae de l'adresse à renseigner si residence secondaire -->
	<mx:HBox width="82%" >
		<mx:Spacer width="10" />
		<mx:VBox width="100%">
			<mx:HBox id="blocAdresse">
				<mx:Spacer width="70" />
				<mx:VBox id="S3" borderStyle="solid" height="-2" visible="false" width="70%" cornerRadius="10">	
					<mx:Spacer height="3"/>
					<mx:HBox horizontalGap="0">
						<mx:Spacer width="3"/>
						<mx:Label text="Renseignez l’adresse" />
						<mx:Spacer width="100%"/>
					</mx:HBox>		
					<mx:HBox width="100%" horizontalGap="0">
						<mx:Spacer width="3"/>
						<mx:Label width="100"  styleName="simple" text="Adresse :" />
						<mx:TextInput id="address" width="390" maxChars="50"  text="{_appModel.residence.address.addressVal}" />
						<mx:Spacer width="3"/>
					</mx:HBox>			
					<mx:HBox width="100%" horizontalGap="0">
						<mx:Spacer width="3"/>	
						<mx:Label  text="Code postal :" styleName="simple" width="100"/>
						<mx:TextInput id="postal_code" width="45"  text="{_appModel.residence.address.postal_code}" maxChars="5" restrict="0-9"/>
						<mx:Spacer width="175" />
						<mx:Label width="50" styleName="simple"  text="Ville :"/>
						<mx:TextInput id="city" width="120" text="{_appModel.residence.address.city}" maxChars="50"/>	
						<mx:Spacer width="3"/>	
					</mx:HBox>
				 </mx:VBox>
			</mx:HBox>
		</mx:VBox>
	</mx:HBox>
	 
	 <mx:HBox horizontalGap="0" width="82%" horizontalAlign="left">
		 <mx:Image source="@Embed('assets/fred/icone_sinistre_vol.swf')"  />
		 <mx:Canvas >
		  <mx:Image verticalCenter="1.5" source="@Embed('assets/fred/barre_bleue_titre2.swf')"/> 
           <mx:Text text="LE VOL :" verticalCenter="2.5" horizontalCenter="-265" styleName="imageText"/>
		  </mx:Canvas>
	 </mx:HBox>
		  
	 <mx:HBox width="82%">
		<mx:Spacer width="3" />
		<mx:VBox>			  
			  <mx:VBox width="100%">
					<mx:HBox horizontalGap="0" verticalAlign="bottom">
						<mx:Label width="250"  styleName="simple" text="A quelle date cela s'est-il produit ?*" fontWeight="bold" />
						<mx:Spacer width="4" />
						<mx:DateField editable="true" dayNames="{['D','L','M','M','J','V','S']}" 
								monthNames="{['JANVIER','FEVRIER','MARS','AVRIL','MAI','JUIN','JUILLET','AOUT','SEPTEMBRE','OCTOBRE','NOVEMBRE','DECEMBRE']}"
								formatString="{'DD/MM/YYYY'}"  
								text="{_appModel.accident.accidentDate}"
								id="txtAccidentDate" />
						<mx:Label id="dateValidation" text="(jj/mm/aaaa)"  visible="true"/>
					</mx:HBox>
			  </mx:VBox>
			  <mx:HBox horizontalGap="0">
			 	 <mx:Spacer width="3"/>
			 	 <mx:Label text="(Ou à défaut la date à laquelle vous en avez eu connaissance)" fontStyle="italic" width="82%" />
			  </mx:HBox>   
			  
		 <mx:Spacer height="2" />	  
		 <mx:HBox width="82%" horizontalGap="10">
			<mx:Label  styleName="simpleBold"  text="Quelqu’un (vous, un de vos proches) était-il présent ?"  />
			<mx:RadioButtonGroup  id="rdOccupant"   />
					<mx:RadioButton  styleName="simple"  id="rdOccupant1" groupName="rdOccupant"  label="Oui"  click="showHideTimeAway()" />
					<mx:RadioButton  styleName="simple"  id="rdOccupant2" groupName="rdOccupant" label="Non"    click="showHideTimeAway()" />
		 </mx:HBox>  
		
		 <mx:HBox borderStyle="none" id="hDureAbscence" visible="false" height="0">
				<mx:Label width="230"  text="Durée de l'absence : " styleName="simpleBold"  />
				<mx:TextInput  id="txtTimeAway" maxChars="20" width="170" text="{_appModel.accident.timeAway}"/>							
		 </mx:HBox>  
	   
	     <mx:Spacer height="2" />	  
	     <mx:HBox width="100%" horizontalGap="0"> 
			<mx:Spacer width="3"/>
			<mx:Label  styleName="simpleBold"  text="Moyen(s) utilisé(s) par les voleurs :"/>
			<mx:VBox>
				<mx:HBox  verticalAlign="middle" width="100%">										
				<mx:CheckBox styleName="simple" width="100" id="mode1" label="Effraction" selected="{_appModel.accident.mode1}" />
				<mx:CheckBox styleName="simple" id="mode2" label="Escalade"   selected="{_appModel.accident.mode2}" />
				<mx:CheckBox styleName="simple" id="mode3" label="Usage de fausse clé"   selected="{_appModel.accident.mode3}" />
				</mx:HBox>
				<mx:HBox width="100%">	
				<mx:CheckBox styleName="simple"  width="100" id="mode5" label="Violence"   selected="{_appModel.accident.mode5}" />
							
				<mx:CheckBox styleName="simple" id="mode6" label="Autre" click="showHideOtherMode()" selected="{_appModel.accident.mode6}" />
					<mx:HBox id="autreMode" visible="false" verticalAlign="middle">
						<mx:Label  text="Précisez :" />
						<mx:TextInput id="txtOtherMode" width="110" maxChars="50"/>
					</mx:HBox>
				</mx:HBox>
			</mx:VBox> 
	     </mx:HBox>
	     <mx:Spacer height="2" />	 
	   <mx:VBox verticalGap="0">  
			<mx:HBox horizontalGap="0">
			  	<mx:Label   width="82%"  styleName="simpleBold" text ="Listez les biens volés"/>
		      	<mx:Label text="(1000 caractères maximum)" styleName="simple" />
			  	<mx:Label text=":" styleName="simpleBold" />			 
		     </mx:HBox>
		     <mx:Label text="(Nous vous demanderons les factures d’achat d’origine)" fontStyle="italic"  />
		   <mx:HBox width="100%" height="100%">
		   	  <mx:TextArea height="40" width="610" maxChars="1000" click="clearDefaultValueStolenGoods()" id="txtStolenGoods"
		   	  	  text="{((!_firstEntryStolenGoods)?_appModel.accident.stolenGoods:'Saisie libre')}" 
		   	  	  color="#c0c1c2" editable="true"  backgroundAlpha="1" borderStyle="solid" />
		   </mx:HBox>
	   </mx:VBox>
	  
	  <mx:Spacer height="2" />
      <mx:VBox>
   	  <mx:HBox horizontalGap="0">
			<mx:Label width="82%"  styleName="simpleBold" text ="Décrivez les dommages causés par les voleurs à votre habitation"/>
            <mx:Label text="(1000 caractères maximum)" styleName="simple" />
    		<mx:Label text=":" styleName="simpleBold" />
	   </mx:HBox>
	   <mx:HBox width="100%" height="100%">
	   	  <mx:TextArea height="40" width="610" maxChars="1000" click="clearDefaultValueDescription()" id="txtDescription"
	   	  	  text="{((!_firstEntryDescription)?_appModel.accident.description:'Saisie libre')}" 
	   	  	  color="#c0c1c2" editable="true"  backgroundAlpha="1" borderStyle="solid" />
	   </mx:HBox>	
	 </mx:VBox>	  
	 <mx:VBox verticalGap="0"/>								
	 
	 <mx:HBox width="82%" horizontalGap="10">
		<mx:Label width="230" styleName="simpleBold"  text="Avez-vous déposé plainte ?" />
		<mx:RadioButtonGroup  id="rdClaim"   />
				<mx:RadioButton  styleName="simple"  id="rdClaim1" groupName="rdClaim"  label="Oui" selected="{((_appModel.accident.claim)?true:false)}"  click="showHideTextPlainte()" />
				<mx:RadioButton  styleName="simple"  id="rdClaim2" groupName="rdClaim" label="Non"  selected="{((!_appModel.accident.claim)?true:false)}"  click="showHideTextPlainte()" />
	 </mx:HBox> 
	    
     <mx:VBox verticalGap="0">	   
		 	<mx:Label  styleName="simple"  text="(Nous vous demanderons une copie du récépissé de la plainte)" fontStyle="italic" />
			 <mx:HBox id="h8" width="610" visible="false">
				  <mx:TextArea height="25" editable="false" backgroundAlpha="0" width="100%"  
				  	text="Pensez à déposer plainte le plus rapidement possible. Le récépissé vous sera demandé." styleName="simpleBold" 
				  borderStyle="solid" />
			</mx:HBox>
		 </mx:VBox>
	</mx:VBox>
	
	</mx:HBox>		
	<mx:Spacer height="100%" />
	
	<mx:HBox width="100%"> 
		<mx:Button label="Etape précédente" width="120" styleName="NavButton" click="prev()" />
		<mx:Spacer width="100%"/>
		<mx:Button label="Etape suivante" width="120"  styleName="NavButton" click="next()" />
	</mx:HBox>
	
</mx:Panel>
