<?xml version="1.0" encoding="utf-8"?>
<mx:Panel 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="views.*"
	xmlns:common="fr.generali.declaration.sinistre.auto.common.views.*"
	xmlns:crecap="fr.generali.declaration.sinistre.auto.common.views.recapitulatif.*"
	xmlns:recap="views.recapitulatif.*" 
	styleName="generaliPanel"
	creationComplete="init()">

	<mx:Script>
		<![CDATA[
			import com.generali.tracking.Tracker;
			import fr.generali.declaration.sinistre.auto.common.command.DeclarationSinistreAutoCommand;
			import fr.generali.gfb.amf.declarations.sinistre.auto.DeclarationAutoRemoteService;
			import fr.generali.declaration.sinistre.auto.common.views.events.DeclarationSinistreAutoEventResult;
			import fr.generali.declaration.sinistre.auto.common.utils.Message;
			import fr.generali.declaration.sinistre.auto.common.utils.Url;
			import fr.generali.declaration.sinistre.auto.common.views.events.DeclarationSinistreAutoEvent;
			import mx.controls.Image;
			import fr.generali.declaration.sinistre.auto.common.views.ProgressBar.PopupUpProgressBarTitleWindow;
			import mx.managers.PopUpManager;
			import mx.core.Application;
			import mx.core.IFlexDisplayObject;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import models.AppModel;
			import fr.generali.declaration.sinistre.auto.common.utils.ImageResource;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			
	  		//PMA-DEBUT
	  		import fr.generali.gfb.amf.declarations.sinistre.auto.dto.DeclarationSinistreAccidentIncendieDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.auto.dto.DommageSinistreAccidentIncendieDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.commun.dto.AbstractDeclarationSinistreDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.commun.dto.AssureDto;
	  		//import fr.generali.gfb.amf.declarations.sinistre.commun.dto.OrigineDeclaration;
	  		//import fr.generali.declaration.sinistre.auto.common.models.dto.*;

			//import fr.generali.gfb.amf.declarations.sinistre.mrh.DeclarationMrhRemoteService;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.ChannelSet;
			import mx.rpc.remoting.RemoteObject;	
			import mx.controls.DateField;
			//import com.generali.utils.;	
			
			//public var service:DeclarationMrhRemoteService;
			public var accidentDto:DeclarationSinistreAccidentIncendieDto = new DeclarationSinistreAccidentIncendieDto();
			public var assureDto:AssureDto = new AssureDto();
			public var dommageDto:DommageSinistreAccidentIncendieDto= new DommageSinistreAccidentIncendieDto();
			//public var originedeDeclaration:OrigineDeclaration= new OrigineDeclaration();
			//PMA-FIN	
			
			// Flex DeepLinking – permet de ecouter les changements au niveau de l'url
			import fr.generali.declaration.sinistre.auto.common.utils.Util;
			import mx.utils.URLUtil;
			import mx.managers.BrowserManager;
			import mx.events.BrowserChangeEvent;
			import mx.managers.IBrowserManager;
	  		public var browserManager:IBrowserManager;
	  		
			[Bindable]
 	  		private var _servUrl:String = null;
 	  		
 	  		[Bindable]
        	private var _appModel:AppModel = AppModel.getInstance();
        	
        	private var _cmd:DeclarationSinistreAutoCommand;

			[Bindable] private var _openedAssure:Boolean = false;
	  		[Bindable] private var _openedContrat:Boolean = false;
	  		[Bindable] private var _openedSinistre:Boolean = true;
	  		[Bindable] private var _openedDommages:Boolean = false;

	  		private var popUpWindow:IFlexDisplayObject;

	  		private function init():void {
				_servUrl = Url.getServerUrl();
				
				//_servUrl = "http://localhost:8080/gfb-ws-webapp";	// TEST
				
				_cmd = DeclarationSinistreAutoCommand.getInstance(_servUrl);
							
				openClose(recapAssure,_openedAssure,imgAssure,130);
				
				_cmd.addEventListener(DeclarationSinistreAutoEventResult.RESULT, result);
				_cmd.addEventListener(FaultEvent.FAULT, fault);

				//PMA-DEBUT
	    		//service = new DeclarationMrhRemoteService();
	    		//_logger.logInfo("Connexion au serveur GFB OK");

    			//service.addRemoteEventListener(DeclarationMrhRemoteService.REMOTE_KEY_DECLARER_BRIS_DE_GLACE, showAddResult, showAddFault);
    			//PMA-FIN				
			}

			private function previous():void {
				this.dispatchEvent(new DeclarationSinistreAutoEvent(DeclarationSinistreAutoEvent.TO_DOMMAGES_EVENT));
			}
		
 			// Fonction sur les panel
			public function openClose(panel:Panel,bOpened:Boolean,img:Image,height:int = 150):void {				
 				if (panel.height < 10){
 					effect.heightTo = height;
 					effect.play([panel]);
 					img.source = ImageResource.iconOpen;
 					bOpened = true;
 				} else{
 					effect.heightTo = 0;
 					effect.play([panel]);
 					img.source = ImageResource.iconClose;
 					bOpened = false;
 				}
 			}

			/********************************
			 * 		ENVOI DES DONNEES		*
			 ********************************/

			// Validation du formulaire
			private function validate():void {
				
	  			validateButton.enabled = false;
	  			showProgress();
	  			//var obj:Object = _appModel.getPostParams();
	  			
	  			
	  			// Version avec Servlet
	  			//httpServ.send(_appModel.getPostParams());
	  			
	  			
				populateAccidentDto();	  	
				//service.declarerAccident(accidentDto);
				
				trace("Envoi des données au serveur: " + this._servUrl);
				_cmd.execute(DeclarationAutoRemoteService.ACCIDENT, accidentDto);

				// POUR TESTER
	  			//parentApplication.dispatchEvent(new DeclarationSinistreAutoEvent(DeclarationSinistreAutoEvent.TO_FINAL_EVENT));
	  		}
	  		
	  		private function populateAccidentDto():void 
	  		{
	  			//**ASSURE**//
  			assureDto.isCourtier = _appModel.assure.isCourtier;
        assureDto.reseau = Application.application.parameters.reseau;	
				assureDto.nom = _appModel.assure.nom;
				assureDto.prenom = _appModel.assure.prenom;
				assureDto.adresse = _appModel.assure.adresse.adresse;
				assureDto.codePostal = _appModel.assure.adresse.codePostal;
				assureDto.ville = _appModel.assure.adresse.ville;
				//assureDto.qualite = _appModel.insured.quality.toString();
				assureDto.email = _appModel.assure.mail;
				assureDto.telephoneMobile = _appModel.assure.telMobile;
				assureDto.telephoneDomicile = _appModel.assure.telDomicile;
				assureDto.telephoneBureau = _appModel.assure.telBureau;
				
				assureDto.numeroContrat = _appModel.assure.contrat.numeroContrat;
				assureDto.numeroClient = _appModel.assure.contrat.numeroClient;
				assureDto.idRceClient = Application.application.parameters.idClientRCE;															  		
				assureDto.codePortefeuille = Application.application.parameters.codePortefeuille;
				assureDto.codeCompagnie = Application.application.parameters.codeCompagnie;

				accidentDto.assure = assureDto;
				//originedeDeclaration._typeOrigine = Application.application.parameters.origineDeclaration;
				//accidentDto.origine = originedeDeclaration;
				accidentDto.origine =  Application.application.parameters.origineDeclaration;;
				
				// Si le parametre "mode" est à "test" alors changement de l'adresse du client
				browserManager = BrowserManager.getInstance();
	            if (URLUtil.stringToObject(browserManager.fragment).mode == Util.MODE_TEST){
					accidentDto.mailTrieste = Util.SUIVI_PROD_MAIL_ESPACE_CLIENT;
	            }else{
					accidentDto.mailTrieste = Application.application.parameters.mailTo;
	            }	
				
				//Conversion d'un string en date
				var dateAccident:Date = DateField.stringToDate(_appModel.sinistre.date, "DD/MM/YYYY");												
				accidentDto.dateSinistre = dateAccident;
				//**ACCIDENT**//
				accidentDto.heureDebut = _appModel.sinistre.heureDebut.toString();
				accidentDto.minuteDebut= _appModel.sinistre.minuteDebut.toString();
				accidentDto.heureFin = _appModel.sinistre.heureFin.toString();
				accidentDto.minuteFin = _appModel.sinistre.minuteFin.toString();
				accidentDto.lieu = _appModel.sinistre.lieu;
				accidentDto.circonstances = _appModel.sinistre.circonstances;
				accidentDto.immatriculation = _appModel.assure.contrat.immatriculationVehicule;
				//**DOMMAGES**//
				dommageDto.description = _appModel.dommages.description;
				dommageDto.depotGarage = _appModel.dommages.depotGarage == "Oui" ? true : false ; // Boolean(_appModel.dommages.depotGarage);
				dommageDto.coordonnesGarage = _appModel.dommages.coordGarage;
				dommageDto.lieuVehicule = _appModel.dommages.lieuVehicule;
				dommageDto.autresDommagesMateriels = _appModel.dommages.autresDommagesMat == "Oui" ? true : false ; //Boolean(_appModel.dommages.autresDommagesMat);
				dommageDto.descriptionDommagesMateriels = _appModel.dommages.descriptionDommagesMat;
				dommageDto.autresPersonnes = _appModel.dommages.autresPersonnes;
				dommageDto.dommagesCorporel= _appModel.dommages.dommagesCorporel == "Oui" ? true : false ; //Boolean(_appModel.dommages.dommagesCorporel);
				accidentDto.dommages = dommageDto;
				
				
				
	  		}
	  		

			private function fault(e:FaultEvent):void {
				removeProgess();

				Alert.okLabel = "Fermer";
				var faultCode:String = e.fault.faultCode.toString();
				if (faultCode.indexOf("Client.Error.RequestTimeout")>=0) {
			        Alert.show(Message.MSG_SERVER_TIMEOUT, "Serveur Timeout", 0x4 ,null,null,ImageResource.iconWarning);
			    } else if (faultCode.indexOf("Server.Error.Request")>=0) {
			        Alert.show(Message.MSG_SERVER_UNREACHABLE_SERVER, "Serveur Introuvable", 0x4 ,null,null,ImageResource.iconWarning);
			    } else if (faultCode.indexOf("Channel.Security.Error")>=0) {
					Alert.show(Message.MSG_SERVER_UNREACHABLE_SERVER, "Serveur Introuvable", 0x4 ,null,null,ImageResource.iconWarning);
				} else {
			    	Alert.show(Message.MSG_SERVER_UNREACHABLE_SERVER, "Serveur Introuvable", 0x4 ,null,null,ImageResource.iconWarning);
			    }

				trace("Error Occurred. Code: " + e.fault.faultCode.toString() + " FaultString: " + e.fault.faultString  + " FaulDetail: " + e.fault.faultDetail);
				
				Tracker.getInstance().trackView("autoetape4recapitulatifbiserreur");
								
			}

			private function result(event:DeclarationSinistreAutoEventResult):void
			{
				removeProgess();
				this.dispatchEvent(new DeclarationSinistreAutoEvent(DeclarationSinistreAutoEvent.TO_FINAL_EVENT));
			}

			/********************
			 * 		ALERT		*
			 ********************/

			private function cancelApplication():void {
 				Alert.okLabel="oui";
				Alert.cancelLabel = "non";
				Alert.buttonWidth = 120;
	 			Alert.show(Message.MSG_ANNULATION,"CONFIRMATION",
	 			Alert.OK | Alert.CANCEL, this, confirmDelete,ImageResource.iconWarning, Alert.OK);
 			}

			private function confirmDelete(event:CloseEvent):void {
	  			if (event.detail == Alert.OK) {
					var urlCancel:URLRequest = new URLRequest(Url.getCancelUrl());
					navigateToURL(urlCancel,"_top");
					validateButton.enabled = false;
					_appModel.clear();
	 			}
	  		}

			/****************************
			 * 		PROGRESS BAR		*
			 ****************************/
			
			private function showProgress():void {
				popUpWindow = PopUpManager.createPopUp(this,PopupUpProgressBarTitleWindow,false);
		        PopUpManager.centerPopUp(popUpWindow); 
			}
			
			private function removeProgess():void {
				PopUpManager.removePopUp(popUpWindow);
				validateButton.enabled=true;
			}
		]]>
	</mx:Script>
	
	<!--
	<mx:HTTPService id="httpServ" 
		url="{_servUrl}" 
		result="result(event)" 
		fault="fault(event)"
		method="POST"
		requestTimeout="15"
		showBusyCursor="true">	
	</mx:HTTPService>
	-->
	
	<mx:Resize id="effect" duration="800"/>

	<mx:ApplicationControlBar horizontalAlign="left" width="100%"  click="openClose(recapAssure,_openedAssure,imgAssure,130)">
		<mx:Image id="imgAssure" source="{ImageResource.iconClose}" />
		<mx:Label styleName="simpleBold" text="L'assuré" id="lbAssure" />
	</mx:ApplicationControlBar>
	<crecap:RecapAssure id="recapAssure" assureModel="{_appModel.assure}" width="100%" height="0" />

	<mx:ApplicationControlBar horizontalAlign="left" width="100%" click="openClose(recapContrat,_openedContrat,imgContrat,55)">
		<mx:Image id="imgContrat" source="{ImageResource.iconClose}" />
		<mx:Label styleName="simpleBold" text="Le contrat" id="lbContrat" />
	</mx:ApplicationControlBar>
	<crecap:RecapContrat id="recapContrat" contratModel="{_appModel.assure.contrat}" width="100%" height="0" />

	<mx:ApplicationControlBar horizontalAlign="left" width="100%"  click="openClose(recapSinistre,_openedSinistre,imgSinistre,180)">
		<mx:Image id="imgSinistre" source="{ImageResource.iconClose}" />
		<mx:Label styleName="simpleBold" text="Le sinistre" id="lbSinistre" />
	</mx:ApplicationControlBar>
	<recap:RecapSinistre id="recapSinistre" width="100%" height="0" />

	<mx:ApplicationControlBar horizontalAlign="left"  width="100%"  click="openClose(recapDommages,_openedDommages,imgDommages,270)">
		<mx:Image id="imgDommages" source="{ImageResource.iconClose}" />
		<mx:Label styleName="simpleBold" text="Les dommages" id="lbDommages" />
	</mx:ApplicationControlBar>
	<recap:RecapDommages id="recapDommages" width="100%" height="0" />

	<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" horizontalAlign="justify" borderStyle="solid" paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2">
		<mx:Text textAlign="{TextFormatAlign.JUSTIFY}" width="100%" text="En cas de sinistre avec un tiers, l’appréciation des responsabilités se fera au vu des éléments du dossier. L’enregistrement de cette déclaration ne constitue pas un accord de prise en charge, ni une appréciation des responsabilités. Il vous incombe de conserver tous les éléments permettant la constatation et l’estimation de vos dommages."/>
	</mx:HBox>

	<mx:Spacer height="100%" />

	<mx:HBox width="100%">
		<mx:Button width="120"  styleName="NavButton" label="Etape précédente" id="prevB" click="previous()" />
		<mx:Spacer width="100%"/>
		<mx:Button label="Annuler" width="120"  styleName="NavButton" click="cancelApplication()"/>
	  	  <mx:Spacer width="10"/>
	  <mx:Button label="Valider" width="120"  styleName="NavButton"  click="validate()"  id="validateButton"/>
	</mx:HBox>
	<common:CNIL />
</mx:Panel>