<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalAlign="center" verticalAlign="middle" creationComplete="onCreationComplete(event)">

	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.controls.Alert;
			import flash.net.LocalConnection;

			private var _localConnection:LocalConnection = new LocalConnection();
			private var  hasSecurityDone:Boolean;
			
			private function sendMessage(event:MouseEvent):void{
				sendToChannel( message.text);
			}
   			private function sendToChannel(mess:String):void{
   				if ( !hasSecurityDone ) {
   					hasSecurityDone = true;
					Security.allowDomain("*");
					_localConnection.addEventListener(StatusEvent.STATUS, onConnStatus);
					_localConnection.allowDomain("*");
					//
					// ajout du domaine si herberge chez Bottin Carto
					//
					//_localConnection.send("www.generali.fr:dataChannel", "displayMessage", message.text);
   				}
				_localConnection.send("_dataChannel", "displayMessage", mess);
			}
     
        
		public function onConnStatus(event:StatusEvent):void{
		   switch (event.level) {
		          case "status":
		               trace("LocalConnection.send() succeeded");
		                break;
		          case "error":
		                trace("LocalConnection.send() failed");
		                break;
		   }
		}			
			private function onCreationComplete(event:FlexEvent):void {
       		//	if (ExternalInterface.available)
          	//		ExternalInterface.addCallback("sendMessageFromJS", sendMessageFromJS);  
		         try 
		        { 
		            // This calls the isContainerReady() method, which in turn calls 
		            // the container to see if Flash Player has loaded and the container 
		            // is ready to receive calls from the SWF. 
		            var containerReady:Boolean = isContainerReady(); 
		            if (containerReady) 
		            { 
		                // If the container is ready, register the SWF's functions. 
		                setupCallbacks(); 
		            } 
		            else 
		            { 
		                // If the container is not ready, set up a Timer to call the 
		                // container at 100ms intervals. Once the container responds that 
		                // it's ready, the timer will be stopped. 
		                var readyTimer:Timer = new Timer(100); 
		                readyTimer.addEventListener(TimerEvent.TIMER, timerHandler); 
		                readyTimer.start(); 
		            } 
		        } 
		        catch(e:Error) {
		        	trace(" Error : " + e.message);
		        
		        }
  			}
 
		 private function setupCallbacks():void 
		{ 
		       	if (ExternalInterface.available)
		          	ExternalInterface.addCallback("sendMessageFromJS", sendMessageFromJS);  
		    // Notify the container that the SWF is ready to be called. 
		   // ExternalInterface.call("setSWFIsReady"); 
		} 	
		private function isContainerReady():Boolean 
		{ 
		    var result:Boolean = ExternalInterface.call("isReady"); 
		    return result; 
		}
		private function timerHandler(event:TimerEvent):void 
		{ 
		    // Check if the container is now ready. 
		    var isReady:Boolean = isContainerReady(); 
		    if (isReady) 
		    { 
		        // If the container has become ready, we don't need to check anymore, 
		        // so stop the timer. 
		        Timer(event.target).stop(); 
		        // Set up the ActionScript methods that will be available to be 
		        // called by the container. 
		        setupCallbacks(); 
		    } 
		}		
			public function sendMessageFromJS(mess:String):void {
				//Alert.show("message " + mess );
				//_localConnection.send("_dataChannel", "displayMessage", mess);
				sendToChannel( mess );
			}
		]]>
	</mx:Script>

	<mx:VBox id="vbox">
		<mx:TextArea id="message" text="5 rue de Chateaubriand 92290 Chatenay-Malabry"/>
		<mx:Button click="sendMessage(event)" label="Envoyer le message"/>
	</mx:VBox>

</mx:Application>