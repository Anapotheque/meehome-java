<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" horizontalAlign="center" 
	styleName="generaliPanel"
	xmlns:generaliValidation="com.generali.views.validation.*" creationComplete="init();" >
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			import com.flexriver.common.validators.FlexriverValidators;
			import com.flexriver.common.utils.FlexriverUtils;
			import com.generali.brisDeGlace.model.AppModel;
	  		import com.generali.utils.Util;
	  		
	  		import mx.formatters.DateFormatter;
	  		import com.generali.events.ui.NextSectionEvent;
	  		private const COLOR_ERR_VALIDATION:String = "#f7b1c8";
	  		[Bindable]
	 		private var _disabledRanges:Array;
	 		[Bindable]
	  		private var _appModel:AppModel = AppModel.getInstance();
	  		[Bindable]
	  		private var _firstEntryAccidentSituation:Boolean = true;
	  		
	  		[Bindable]
	  		private var _firstEntryComments:Boolean = true;	 
	  		 		
	  		[Bindable]
	  		private var _firstEntryPurchaseDate:Boolean = true;
	  		
	  		private var _currentDate:Date;
	  		
	  		private var _arraySurfaces:ArrayCollection;
	  		private function init():void
	  		{
	  			_currentDate = new Date();
	  			initCalendar();
			}
			 
	  		private function initCalendar():void	  		
	 		{	  		  			
	  			txtAccidentDate.disabledRanges = Util.getDisabledRangeDays();
	  		}
	  		
	  		private function fillModel():void
	  		{
	  			_appModel.accident.accidentDate= txtAccidentDate.text;
	  			if (!_firstEntryAccidentSituation)
	  			{
	  				_appModel.accident.accidentSituation = txtAccidentSituation.text;
	  			}
	  			_appModel.accident.accidentdGoodType1 = chbxAccidentedGoodType1.selected;
	  			_appModel.accident.accidentdGoodType2 = chbxAccidentedGoodType2.selected;
	  			_appModel.accident.accidentdGoodType3 = chbxAccidentedGoodType3.selected;
	  			_appModel.accident.accidentdGoodType4 = chbxAccidentedGoodType4.selected;
	  			_appModel.accident.accidentdGoodType5 = chbxAccidentedGoodType5.selected;
	  			_appModel.accident.accidentdGoodType6 = chbxAccidentedGoodType6.selected;
	  			_appModel.accident.accidentdGoodType7 = chbxAccidentedGoodType7.selected;	  			
	  			_appModel.accident.accidentdGoodSurface1 = txtSurface1.text;
	  			_appModel.accident.accidentdGoodSurface2 = txtSurface2.text;
	  			_appModel.accident.accidentdGoodSurface3 = txtSurface3.text;
	  			_appModel.accident.accidentdGoodSurface4 = txtSurface4.text;
	  			_appModel.accident.accidentdGoodSurface5 = txtSurface5.text;
	  			_appModel.accident.accidentdGoodSurface6 = txtSurface6.text;
	  			_appModel.accident.accidentdGoodSurface7 = txtSurface7.text;	  			
	  			_appModel.accident.otherAccidentedGood7 = txtOtherAccidentedGood7.text;
	  			
	  			if (!_firstEntryPurchaseDate && getPurchaseDateVisibility() == true)
	  			{
	  				_appModel.accident.purchaseDate = txtPurchaseDate.text;
	  			}
	  			if (!_firstEntryPurchaseDate && getPurchaseDateVisibility() == false)
	  			{
	  				_appModel.accident.purchaseDate = "";
	  			}	
	  			if (!_firstEntryComments)
	  			{
	  				_appModel.accident.comments = txtComments.text;
	  			}  			
	  		}
	  		
	  		private function prev():void
	  		{	  
	  			fillModel();			 
	  			parentApplication.dispatchEvent( new NextSectionEvent(NextSectionEvent.TO_INSURED));
	  		}

	  		private function validateAccidentSurface(txtInput:TextInput,chbox:CheckBox,str:String):void
	  		{
	  			if (txtInput.text != "")
	  			{
	  				if (!FlexriverValidators.isDecimal(txtInput.text) && chbox.selected)
	  				{
	  					txtError.addError("La surface du bien endommagé '"+str+"' doit être un nombre décimal, merci de le saisir à nouveau");
	  					txtInput.setStyle("backgroundColor",COLOR_ERR_VALIDATION);
	  				}
	  				else
	  				{
	  					txtInput.setStyle("backgroundColor","white");
	  				}
	  			}
	  			else
  				{
  					txtInput.setStyle("backgroundColor","white");
  				}
	  		}
	  		
	  		private function next():void
	  		{
	  			txtError.prepare_validation();
	  			var surfaceTypeColl :ArrayCollection = new ArrayCollection 
	  							([{txt:txtSurface1,chbx:chbxAccidentedGoodType1,str:"Simple vitrage"},
					  			{txt:txtSurface2,chbx:chbxAccidentedGoodType2,str:"Double vitrage"},
					  			{txt:txtSurface3,chbx:chbxAccidentedGoodType3,str:"Sur-vitrage"},
					  			{txt:txtSurface4,chbx:chbxAccidentedGoodType4,str:"Insert"},
					  			{txt:txtSurface5,chbx:chbxAccidentedGoodType5,str:"Vitre meuble"},
					  			{txt:txtSurface6,chbx:chbxAccidentedGoodType6,str:"Mirroir"},
					  			{txt:txtSurface7,chbx:chbxAccidentedGoodType7,str:"Autre"}  ]);
					  			
	  			for each (var obj:Object in surfaceTypeColl)
	  			{
	  				validateAccidentSurface(obj.txt,obj.chbx,obj.str);
	  			}
	  			var i:int;
	  			if (txtAccidentDate.text != "" )
	  			{
	  					if (!FlexriverValidators.isValidDate(txtAccidentDate.text))
	  					{
	  						txtError.addError("La date du sinistre doit être conforme au format (jj/mm/aaaa), merci de la saisir à nouveau.");
	  						txtAccidentDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);
	  					}
	  					else
	  					{
	  						i = mx.utils.ObjectUtil.dateCompare(FlexriverUtils.toDate(txtAccidentDate.text) , _currentDate);
				  			if(i==1)
				  			{
				  				txtError.addError("La date du sinistre doit être antérieure ou égale à la date du jour.");
				  				txtAccidentDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);	
				  			}
				  			else
				  			{
				  				txtAccidentDate.setStyle("backgroundColor","white");
				  			}
	  					}
	  			}
	  			else
	  			{
	  				txtError.addError("La date du sinistre est obligtoire, merci de la saisir à nouveau.");
	  				txtAccidentDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);	
	  			}
	  				
	  			if (txtPurchaseDate.text != "" && !_firstEntryPurchaseDate)
	  			{
	  					if (!FlexriverValidators.isValidDate(txtPurchaseDate.text))
	  					{
	  						txtError.addError("La date d'achat du bien doit être conforme au format (jj/mm/aaaa), merci de la saisir à nouveau.");
	  						txtPurchaseDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);
	  					}
	  					else
	  					{			
				  			i = mx.utils.ObjectUtil.dateCompare(FlexriverUtils.toDate(txtPurchaseDate.text) ,_currentDate);
				  			if(i==1)
				  			{
				  				txtError.addError("La date d'achat du bien doit être antérieure ou égale à la date du jour.");
				  				txtPurchaseDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);
				  						
				  			}
				  			else
				  			{
				  				txtPurchaseDate.setStyle("backgroundColor","white");
				  			
				  			}
	  					}
	  			}
	  			else
	  			{
	  				txtPurchaseDate.setStyle("backgroundColor","white");
	  			}
	  			
			  	if( (txtPurchaseDate.text != "" ) && (txtAccidentDate.text != "" ) && !_firstEntryPurchaseDate  )
			  	{
			  		i = mx.utils.ObjectUtil.dateCompare( FlexriverUtils.toDate(txtPurchaseDate.text),FlexriverUtils.toDate(txtAccidentDate.text));
		  			if(i==1)
		  			{
		  				txtError.addError("La date d'achat du bien doit être antérieure à la date du sinistre.");
		  				txtPurchaseDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);
		  				txtAccidentDate.setStyle("backgroundColor",COLOR_ERR_VALIDATION);	
		  			}
		  			else
		  			{
		  				txtPurchaseDate.setStyle("backgroundColor","white");
		  				txtAccidentDate.setStyle("backgroundColor","white");	
		  			}
			  	}
			  	
	  			if (!txtError.play())
	  			{
	  				fillModel();
	  				parentApplication.dispatchEvent( new NextSectionEvent(NextSectionEvent.TO_RECAP));
	  			}
	  		}
	  		
	  		
	  		
	  		public function clearTxtAccidentSituation():void
	  		{
				if(_firstEntryAccidentSituation)
				{
					this.txtAccidentSituation.text = "";
					txtAccidentSituation.setStyle("color","black");
					_firstEntryAccidentSituation=false;
				} 
				
			}
			public function clearTxtComments():void
			{
				if(_firstEntryComments)
				{
					this.txtComments.text = "";
					txtComments.setStyle("color","black");
					_firstEntryComments=false;
				} 
				
			}
			
			private function clearTxtPurchaseDate():void
			{
				if(_firstEntryPurchaseDate)
					{
						this.txtPurchaseDate.text = "";
						txtPurchaseDate.setStyle("color","black");
						_firstEntryPurchaseDate=false;
					}
			}
			public function showHideSurface1():void
			{
				if(chbxAccidentedGoodType1.selected)
					hbxSurface1.visible = true;
				else
					hbxSurface1.visible = false;
			}
			
	  		public function showHideSurface2():void
	  		{
				if(chbxAccidentedGoodType2.selected)
					hbxSurface2.visible = true;
				else
					hbxSurface2.visible = false;
			}
			public function showHideSurface3():void
			{
				if(chbxAccidentedGoodType3.selected)
					hbxSurface3.visible = true;
				else
					hbxSurface3.visible = false;
			}
			public function showHideSurface4():void
			{
				if(chbxAccidentedGoodType4.selected)
					hbxSurface4.visible = true;
				else
					hbxSurface4.visible = false;
				getPurchaseDateVisibility();
			}
			public function showHideSurface5():void
			{
				if(chbxAccidentedGoodType5.selected)
					hbxSurface5.visible = true;
				else
					hbxSurface5.visible = false;
				getPurchaseDateVisibility();
			}
			public function showHideSurface6():void
			{
				if(chbxAccidentedGoodType6.selected)
					hbxSurface6.visible = true;
				else
					hbxSurface6.visible = false;
				getPurchaseDateVisibility();
			}
			public function showHideSurface7():void
			{
				if(chbxAccidentedGoodType7.selected)
					hbxSurface7.visible = true;
				else
					hbxSurface7.visible = false;
				getPurchaseDateVisibility();
			}
			
			private function getPurchaseDateVisibility():Boolean
			{
				if( chbxAccidentedGoodType4.selected || chbxAccidentedGoodType5.selected || chbxAccidentedGoodType6.selected || chbxAccidentedGoodType7.selected){
					showPurchaseDateTransition.play();
					return true;
				}
				else
				{
					hidePurchaseDateTransition.play();
					return false;
				}
			}
		]]>
	</mx:Script>
	<mx:Sequence id="showPurchaseDateTransition" target="{hbxPurchaseDate}">
			<mx:SetPropertyAction name="visible" value="true" />
			<mx:Resize heightTo="25" duration="500" />
	</mx:Sequence>	
	 <mx:Parallel id="hidePurchaseDateTransition" target="{hbxPurchaseDate}">
		<mx:SetPropertyAction name="visible" value="false" />
		<mx:Resize   heightTo="0" duration="500" />			
	</mx:Parallel>
	<generaliValidation:GeneraliValidator id="txtError" styleName="ErrorVal"  width="88%" color="red"/>
	<mx:HBox horizontalGap="0" width="88%" horizontalAlign="left">
				<mx:Image source="@Embed('assets/fred/icone_sinistre_brisglace.swf')"  />
				 <mx:Canvas >
				   <mx:Image verticalCenter="1.5" source="@Embed('assets/fred/barre_bleue_titre2.swf')"/>
		           <mx:Text text="LE BRIS DE GLACE" verticalCenter="2.5" horizontalCenter="-225" styleName="imageText"/>
				  </mx:Canvas>
			  </mx:HBox>
	<mx:HBox width="82%">
		<mx:Spacer width="3" />
		<mx:VBox>			  
			  <mx:VBox width="100%">
					<mx:HBox horizontalGap="0" verticalAlign="bottom">
						<mx:Label width="250"  styleName="simple" text="A quelle date cela s'est-il produit ?*" fontWeight="bold" />
						<mx:Spacer width="4" />
						<mx:DateField editable="true" dayNames="{['D','L','M','M','J','V','S']}"  styleName="simple"
								monthNames="{['JANVIER','FEVRIER','MARS','AVRIL','MAI','JUIN','JUILLET','AOUT','SEPTEMBRE','OCTOBRE','NOVEMBRE','DECEMBRE']}"
								formatString="{'DD/MM/YYYY'}"  
								text="{_appModel.accident.accidentDate}" 
								id="txtAccidentDate" />
					</mx:HBox>
			  </mx:VBox>
			  <mx:HBox horizontalGap="0">
			 	 <mx:Spacer width="3"/>
			 	 <mx:Label text="(Ou à défaut la date à laquelle vous en avez eu connaissance)" fontStyle="italic" width="82%" />
			  </mx:HBox>      
			  <mx:HBox horizontalGap="0">
					<mx:Label   width="82%"  styleName="simpleBold" text ="Décrivez les circonstances du sinistre"/>
		            <mx:Label text="(1000 caractères maximum)" styleName="simple" />
		    		<mx:Label text="?" styleName="simpleBold" />
	      	   </mx:HBox>
		       <mx:HBox width="100%" height="100%">
		       	  <mx:TextArea height="50" width="610" maxChars="1000" click="clearTxtAccidentSituation()" id="txtAccidentSituation"
		       	  	  text="{((!_firstEntryAccidentSituation)?_appModel.accident.accidentSituation:'Saisie libre')}" 
		       	  	  color="#c0c1c2" editable="true"  backgroundAlpha="1" borderStyle="solid" />
			   </mx:HBox>
			   <mx:HBox>
			       <mx:Label text="Type de bien endommagé : " styleName="simpleBold"/>
		           <mx:VBox verticalGap="0">
				   			<mx:HBox width="100%">
				   				<mx:CheckBox width="115"  change="showHideSurface1()" styleName="simple" id="chbxAccidentedGoodType1" 
				   						selected="{_appModel.accident.accidentdGoodType1}" label="Simple vitrage"  />
				   				<mx:HBox  id="hbxSurface1" visible="false"  verticalAlign="middle" horizontalAlign="right" width="280">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface1" width="40" maxChars="5" restrict=".0-9" 	text="{_appModel.accident.accidentdGoodSurface1}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
				   			<mx:HBox width="100%">
				   				<mx:CheckBox width="115"   change="showHideSurface2()" styleName="simple" 
				   						selected="{_appModel.accident.accidentdGoodType2}" id="chbxAccidentedGoodType2" label="Double vitrage"  />
				   				<mx:HBox id="hbxSurface2" visible="false" verticalAlign="middle" horizontalAlign="right" width="280">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface2" width="40" maxChars="5" restrict=".0-9"  	text="{_appModel.accident.accidentdGoodSurface2}"/>
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
				   			<mx:HBox width="100%" verticalAlign="middle">
				   				<mx:HBox  verticalAlign="middle" horizontalGap="0"> 
				   						<mx:CheckBox width="96"  change="showHideSurface3()" styleName="simple" 
				   						selected="{_appModel.accident.accidentdGoodType3}" id="chbxAccidentedGoodType3" label="Sur-vitrage"  />
				   						<mx:Image  source="@Embed('assets/infos.gif')" toolTip="Le survitrage est une vitre supplémentaire superposée à celle existante par l'intermédiaire d'un cadre." />
				   				</mx:HBox>	
				   				<mx:HBox id="hbxSurface3" visible="false" verticalAlign="middle" horizontalAlign="right" width="289">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface3" width="40" maxChars="5" restrict=".0-9"  	text="{_appModel.accident.accidentdGoodSurface3}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
				   			<mx:HBox width="100%" >
				   				<mx:CheckBox width="115" change="showHideSurface4()"  styleName="simple" 
				   						selected="{_appModel.accident.accidentdGoodType4}" id="chbxAccidentedGoodType4" label="Insert"  />
				   				<mx:HBox id="hbxSurface4" visible="false"  verticalAlign="middle" horizontalAlign="right" width="280">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface4" width="40" maxChars="5" restrict=".0-9" 	text="{_appModel.accident.accidentdGoodSurface4}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
				   			<mx:HBox width="100%" >
				   				<mx:CheckBox width="115" change="showHideSurface5()"  styleName="simple" id="chbxAccidentedGoodType5" 
				   						selected="{_appModel.accident.accidentdGoodType5}" label="Vitre de meuble"  />
				   				<mx:HBox id="hbxSurface5" visible="false" verticalAlign="middle" horizontalAlign="right" width="280">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface5" width="40" maxChars="5" restrict=".0-9" 	text="{_appModel.accident.accidentdGoodSurface5}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
				   			<mx:HBox width="100%"  >
				   				<mx:CheckBox width="115" change="showHideSurface6()"  styleName="simple" 
				   						selected="{_appModel.accident.accidentdGoodType6}" id="chbxAccidentedGoodType6" label="Miroir"  />
				   				<mx:HBox id="hbxSurface6" visible="false" verticalAlign="middle" horizontalAlign="right" width="280">
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface6" width="40" maxChars="5" restrict=".0-9" 	text="{_appModel.accident.accidentdGoodSurface6}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
							<mx:HBox width="100%" >
				   				<mx:CheckBox width="67" change="showHideSurface7()" styleName="simple" 
				   						selected="{_appModel.accident.accidentdGoodType7}" id="chbxAccidentedGoodType7" label="Autre"  />
				   				
				   				<mx:HBox id="hbxSurface7" visible="false" verticalAlign="middle" horizontalAlign="right" >
				   					<mx:Label width="70" styleName="simple"    text="Précisez :" />
				   					<mx:TextInput id="txtOtherAccidentedGood7" width="80"  maxChars="50" 	text="{_appModel.accident.otherAccidentedGood7}" />
				   					<mx:Label width="70" styleName="simple"     text="Surface :" />
					  				<mx:TextInput id="txtSurface7" width="40" maxChars="5" restrict=".0-9" 	text="{_appModel.accident.accidentdGoodSurface7}" />
						  			<mx:Label width="36"   text="m²" />	
				   				</mx:HBox>
				   			</mx:HBox>	
							</mx:VBox>
			   </mx:HBox>	
			   <mx:Spacer height="3" />
			   <mx:HBox horizontalGap="0" verticalAlign="bottom" visible="false" height="0" id="hbxPurchaseDate"> 
					<mx:Label   width="82%"  styleName="simpleBold" text ="Date d'achat du bien "/>
		            <mx:Label text="(S’il ne s’agit pas d’un vitrage)" styleName="simple" />
		    		<mx:Label text=":" styleName="simpleBold" />
		 	    	<mx:TextInput backgroundAlpha="0.8"  styleName="simple" width="75" color="#c0c1c2" text="{((_firstEntryPurchaseDate)?'jj/mm/aaaa':_appModel.accident.purchaseDate)}" click="clearTxtPurchaseDate()" id="txtPurchaseDate" />
		    	</mx:HBox>
	      	    <mx:HBox horizontalGap="0">
					<mx:Label   width="82%"  styleName="simpleBold" text ="Ajoutez des commentaires si besoin"/>
		            <mx:Label text="(1000 caractères maximum)" styleName="simple" />
		    		<mx:Label text="?" styleName="simpleBold" />
	      	   </mx:HBox>
		       <mx:HBox width="100%" height="100%">
		       	  <mx:TextArea height="50" width="610" maxChars="1000" click="clearTxtComments()" 
		       	  	id="txtComments" 
		       	  	text="{((!_firstEntryComments)?_appModel.accident.comments:'Saisie libre')}" 
		       	  	color="#c0c1c2"  editable="true"  backgroundAlpha="1" borderStyle="solid" />
			   </mx:HBox>
			  
			</mx:VBox>
	</mx:HBox>		
	<mx:Spacer height="100%" />
	<mx:HBox width="100%">
		<mx:Button label="Etape précédente" width="120" styleName="NavButton" click="prev()" />
		<mx:Spacer width="100%"/>
		<mx:Button label="Etape suivante" width="120"  styleName="NavButton" click="next()" />
	</mx:HBox>
</mx:Panel>
