<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:common="com.generali.views.*" 
	xmlns:comp="com.generali.degatDesEaux.views.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"	
	preloader="com.generali.utils.CustomPreloader"
	backgroundColor="white" width="768" height="660" layout="vertical" 
	creationComplete="init()" preinitialize="startingUp()"
	verticalScrollPolicy="auto" horizontalScrollPolicy="off" addedToStage="initTracker()" >
	
	<mx:Style source="flex_skins.css"/>
	<mx:Script>
	 	<![CDATA[
	 		import com.generali.tracking.Tracker;
	 		import com.generali.views.Insured;
	 		import com.flexriver.common.logging.LogFactory;
	 		import com.generali.events.ui.InitApplicationEvent;
	 		import mx.controls.Alert;
	 		import vegas.data.bag.AbstractBag;
	 		import com.generali.degatDesEaux.utils.RuleEngineStub;
	 		import mx.rpc.events.ResultEvent;
	 		import mx.rpc.events.FaultEvent;
	 		import com.flexriver.briffle.rulesengine.RulesEngineEvent;
	 		import com.generali.degatDesEaux.utils.Initializer;
	 		import com.generali.degatDesEaux.model.AppModel;
	 		import mx.controls.Button;
	 		import com.generali.events.ui.NextSectionEvent;
			import com.generali.utils.RecapGenerali;
	 		
	 		// Flex DeepLinking – permet de ecouter les changements au niveau de l'url
	 		import com.generali.utils.Util;
			import mx.utils.URLUtil;
			import mx.managers.BrowserManager;
			import mx.events.BrowserChangeEvent;
			import mx.managers.IBrowserManager;
			public var browserManager:IBrowserManager;
	 		
	 		public const APPLICATION_TYPE:String = "DDE";
	 		private const RULE_SET_XML:String = "ruleSet.xml";
			private var _recapGenerali:RecapGenerali = new RecapGenerali();	 		
	 		

        	[Embed(source="/assets/info_icon.png")]
        	private var _iconWarning:Class;
        		 		
	 		[Embed(source="ruleSet.xml", mimeType="application/octet-stream")]
			protected const EmbeddedRulesetXML:Class;

	 		[Embed(source="/assets/fred/step_01.swf")]
        	private var _step1:Class;
        	
        	[Embed(source="/assets/fred/step_02.swf")]
        	private var _step2:Class;
        	
        	[Embed(source="/assets/fred/step_03.swf")]
        	private var _step3:Class;
        	
        	[Embed(source="/assets/fred/step_04.swf")]
        	private var _step4:Class;
        	 
        	public var initializer: Initializer = Initializer.getInstance();
        	
        	[Bindable]
        	private var appModel:AppModel = AppModel.getInstance();
        	
        	private function startingUp():void
        	{
        		LogFactory.init();
        	}

			[Bindable]
        	private var _appModel:AppModel = AppModel.getInstance();
        	        	
        	// Flex DeepLinking – permet de ecouter les changements au niveau de l'url    	
			private function parseURL(event:Event):void {
	            // Si le parametre "mode" est à "test" alors changement de l'adresse du client
	            if (URLUtil.stringToObject(browserManager.fragment).mode == Util.MODE_TEST )
					appModel.insured.mail = Util.SUIVI_PROD_MAIL_ESPACE_CLIENT;
				else
	            	appModel.insured.mail = Application.application.parameters.mail;
        	}
        	        	
	 		private function init():void {	 	
	 				
       			// Flex DeepLinking – permet de ecouter les changements au niveau de l'url
				browserManager = BrowserManager.getInstance();
           		BrowserManager.getInstance().addEventListener(BrowserChangeEvent.BROWSER_URL_CHANGE, parseURL); 
           		browserManager.init("", "");
           		
				//On vérifie la bonne initialisation des 2 appels "FlashsVar" : CancelUrl et ServerUrl 
				//CancelUrl
				var urlCancel:String = Application.application.parameters.cancelUrl;
				if (urlCancel == "") {
					Alert.show(RecapGenerali.MSG_SERVER_INITIALISATION + "cancelUrl", "Initialisation Url", 0x4 ,null,null,_iconWarning);
				}
				//ServerUrl
				var urlServer:String = Application.application.parameters.serverUrl;
				if (urlServer == "") {
					Alert.show(RecapGenerali.MSG_SERVER_INITIALISATION + "serverUrl", "Initialisation Url", 0x4 ,null,null,_iconWarning);
				}

	 			this.addEventListener(NextSectionEvent.TO_INSURED,showInsured);
	 			this.addEventListener(NextSectionEvent.TO_SINISTRE,showSinistreStep1);
	 			this.addEventListener(NextSectionEvent.TO_SINISTRE_SECOND,showSinistreStep2);
	 			this.addEventListener(NextSectionEvent.TO_DAMAGE,showDamage);
	 			this.addEventListener(NextSectionEvent.TO_RECAP,showRecap);
	 			this.addEventListener(NextSectionEvent.TO_FINAL,showFinalStep);
	 			this.addEventListener(InitApplicationEvent.ID,clearAll);	 			 

				_appModel.clear();
				//Pré-Initialisation des champs Assuré
				_appModel.insured.last_name = Application.application.parameters.nom;
				_appModel.insured.first_name = Application.application.parameters.prenom;
				_appModel.insured.address.addressVal = Application.application.parameters.adresse;
				_appModel.insured.address.postal_code = Application.application.parameters.codePostal;
				_appModel.insured.address.city = Application.application.parameters.ville;
				_appModel.insured.mail = Application.application.parameters.mail;
				_appModel.insured.mobile_number = Application.application.parameters.telMobile;
				_appModel.insured.house_number = Application.application.parameters.telDomicile;
				_appModel.insured.work_number = Application.application.parameters.telBureau;
				_appModel.insured.contract_number= Application.application.parameters.numeroContrat;
				_appModel.insured.client_number= Application.application.parameters.numeroClient;
				_appModel.insured.isCourtier = Application.application.parameters.isCourtier;
				_appModel.residence.address.addressVal = Application.application.parameters.adresseBien;
				_appModel.residence.address.postal_code = Application.application.parameters.codePostalBien;				
				_appModel.residence.address.city = Application.application.parameters.villeBien;		
												
				if (Application.application.parameters.isResidencePrincipale == "true") {
					_appModel.residence.main_residence = true;
				} else {
					_appModel.residence.main_residence = false;					
				}
	 			
	 			showInsured(null);
	 			initChampsAssure();
	 			

	 			/* load XML as remote resource */
	 			//httServ.send();
	 			/* load XML as embedded resource */
	 			var xml:XML = XML(new EmbeddedRulesetXML());
				var ruleEngine : RuleEngineStub = RuleEngineStub.getInstance();
				ruleEngine.init(xml);
			}

			private function initChampsAssure():void {
				if (appModel.residence.address.addressVal != "" && appModel.residence.address.postal_code != "" && appModel.residence.address.city != "" ) {
					viewInsured.adresse_bien.text = appModel.residence.address.addressVal + " - " + appModel.residence.address.postal_code + " " + appModel.residence.address.city; 
				}
				
				viewInsured.adresse_bien.visible = false;
				viewInsured.lbl_Adresse_bien.visible = false;
				
				// SBO: Demande de la MOA d'activer en modification les tel. + email
				viewInsured.Q7.enabled = true;
				viewInsured.Q8.enabled = true;
				viewInsured.Q9.enabled = true;
				viewInsured.Q10.enabled = true;

				/*
				if (_appModel.insured.mail == "") {
					viewInsured.Q7.enabled = true;
				}
													
				if (_appModel.insured.mobile_number == "") {
					viewInsured.Q8.enabled = true;
				}

				if (_appModel.insured.house_number == "") {
					viewInsured.Q9.enabled = true;
				}				

				if (_appModel.insured.work_number == "") {
					viewInsured.Q10.enabled = true;
				}
				*/							

			}
	 		
	 		/**
	 		 *  Init the tracker 
	 		 */ 
	 		private function initTracker():void {
	 			Tracker.getInstance().trackView('mrhdegatdeseauxetape1lassure');
	 		}
	 		
	 		private function showInsured(e:NextSectionEvent):void{
	 			comp.source = _step1;
	 			this.currentState ="Insured";
	 		}
	 		
	 		private function showSinistreStep1(e:NextSectionEvent):void
	 		{	 			
	 			comp.source = _step2;
	 			this.currentState ="sinistre";
	 			
	 			Tracker.getInstance().trackView("mrhdegatdeseauxetape2lesinistre");
	 		}
	 		private function showSinistreStep2(e:NextSectionEvent):void
	 		{ 			
	 			comp.source = _step2;
	 			this.currentState ="sinistre2";
	 			
	 			Tracker.getInstance().trackView("mrhdegatdeseauxetape2lesinistre");
	 		}
	 		private function showDamage(e:NextSectionEvent):void
	 		{	 			
	 			comp.source = _step3;
	 			this.currentState ="damage";
	 			
	 			Tracker.getInstance().trackView("mrhdegatdeseauxetape3lesdommages");
	 		}
	 		private function showRecap(e:NextSectionEvent):void
	 		{	 			
	 			comp.source = _step4;
	 			this.currentState ="recap";
	 			
	 			Tracker.getInstance().trackView("mrhdegatdeseauxetape4recapitulatif");
	 			
	 		}

	 		private function showFinalStep(e:NextSectionEvent):void
	 		{
	 			this.currentState ="final";
	 			
	 			Tracker.getInstance().trackView("mrhdegatdeseauxetape5confirmation");
	 			
	 		}
	 		
			private function clearAll(e:InitApplicationEvent):void
	 		{
	 			appModel.clear();
	 		}
	 		
	 	]]>
	 </mx:Script>
	 
	 <mx:states>
	 	<mx:State name="Insured">		   
				 <mx:AddChild  relativeTo="{hb}" position="after">
					 <comp:Insured id="viewInsured" width="98%" height="100%"/>					 
		       	</mx:AddChild>
		</mx:State>
		<mx:State name="sinistre">		   
				 <mx:AddChild relativeTo="{hb}" position="after">
					 <comp:AccidentStep1  width="98%" height="100%"/>
		       	</mx:AddChild>
		</mx:State>
		<mx:State name="sinistre2">		   
				 <mx:AddChild relativeTo="{hb}" position="after">
					 <comp:AccidentStep2 width="98%" height="100%"/>
		       	</mx:AddChild>
		</mx:State>
		<mx:State name="damage">		   
				 <mx:AddChild relativeTo="{hb}" position="after">
					 <comp:Damage width="98%" height="100%"/>
		        </mx:AddChild>
		</mx:State>
		<mx:State name="recap">		   
				 <mx:AddChild relativeTo="{hb}" position="after">
					 <comp:Recap width="98%" height="100%"/>
		       	</mx:AddChild>
		</mx:State>
		<mx:State name="final">		
				<mx:RemoveChild target="{comp}">
					
				</mx:RemoveChild>   
				 <mx:AddChild relativeTo="{hb}" position="after">
					 <common:FinalStep insuredModel="{appModel.insured}" width="98%" height="100%"/>
		       	</mx:AddChild>
		</mx:State>
	 </mx:states>
     <mx:HBox width="84%" horizontalAlign="left" >
	 		<mx:Text text=" Habitation : dégât des eaux" fontSize="17" fontFamily="Verdana" fontWeight="bold" color="#1F777D" />
	 </mx:HBox>
 	 <mx:Spacer height="2"/>
 	 <mx:HBox id="hb" width="100%" >
	 	 <mx:Spacer width="35" />
		 <mx:Image id="comp" />
		 <mx:Spacer width="40" />
	 </mx:HBox> 	 
	 
</mx:Application>
