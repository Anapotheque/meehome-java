<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:recap="com.generali.degatDesEaux.views.recap.*" 
	 borderThicknessBottom="10" borderThicknessLeft="5" borderThicknessRight="5" headerHeight="10"
	 styleName="generaliPanel" verticalAlign="middle" verticalGap="2" 
	creationComplete="init()" xmlns:views="com.generali.views.*">
	

	<mx:Script>
	  	<![CDATA[
			import com.generali.tracking.Tracker;
			
			import com.generali.degatDesEaux.utils.EnumTypePersonneTouche;
			
	  		import com.generali.degatDesEaux.model.PieceVO;
	  		import mx.collections.ArrayList;
	  		import mx.collections.ArrayCollection;
	  		import com.flexriver.common.logging.DefaultLogger;
	  		import com.flexriver.common.logging.LogFactory;
	  		import com.generali.views.DummyTitleWindow;
	  		import com.flexriver.common.modules.ModulesCommon;
	  		import com.generali.utils.RecapGenerali;
	  		import mx.modules.ModuleManager;
	  		import mx.modules.IModuleInfo;
	  		import mx.events.ModuleEvent;
	  		import mx.events.CloseEvent;
	  		import mx.core.Application;
	  		import mx.core.IFlexDisplayObject;
	  		import mx.managers.PopUpManager;
	  		import mx.rpc.events.ResultEvent;
	  		import mx.rpc.events.FaultEvent;
	  		import mx.controls.Alert;
	  		import com.generali.degatDesEaux.model.AppModel;
	  		import com.generali.events.ui.NextSectionEvent;
	  		import com.generali.utils.Util;
	  		import vegas.data.map.HashMap;
	  		
	  		//PMA-DEBUT
	  		import fr.generali.gfb.amf.declarations.sinistre.mrh.DeclarationMrhRemoteService;
	  		import com.generali.events.DeclarationSinistreMrhEventResult;
	  		import com.generali.command.DeclarationSinistreMrhCommand;
	  			  		
	  		import fr.generali.gfb.amf.declarations.sinistre.mrh.dto.DeclarationSinistreMrhDegatsDesEauxDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.mrh.dto.BienInputDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.mrh.dto.PieceInputDto;
	  		import fr.generali.gfb.amf.declarations.sinistre.commun.dto.*;	  		
	  		
	  		
			import fr.generali.gfb.amf.declarations.sinistre.mrh.DeclarationMrhRemoteService;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.ChannelSet;
			import mx.rpc.remoting.RemoteObject;	
			import mx.controls.DateField;
			//import com.generali.utils.;	
			
			//public var service:DeclarationMrhRemoteService;
			public var degatsDesEauxDto:DeclarationSinistreMrhDegatsDesEauxDto = new DeclarationSinistreMrhDegatsDesEauxDto();
			public var assureDto:AssureDto = new AssureDto();
			public var bienInputDto:BienInputDto = new BienInputDto();
			public var pieceInputDto:PieceInputDto = new PieceInputDto();
			//public var originedeDeclaration:OrigineDeclaration= new OrigineDeclaration();

			//PMA-FIN	  		
	  		
	  		// Flex DeepLinking – permet de ecouter les changements au niveau de l'url
	  		import com.generali.utils.Util;
			import mx.utils.URLUtil;
			import mx.managers.BrowserManager;
			import mx.events.BrowserChangeEvent;
			import mx.managers.IBrowserManager;
	  		public var browserManager:IBrowserManager;
	  		
	  		[Bindable]
	  		private var _appModel:AppModel = AppModel.getInstance();
	  		
	  		private var _cmd:DeclarationSinistreMrhCommand;
	  		
	  		[Bindable]
			[Embed(source="/assets/fred/mini_fleche_right.swf")]
			private var _iconClose:Class;
			[Bindable]
			[Embed(source="/assets/fred/mini_fleche_down.swf")]
			private var _iconOpen:Class;
	  		private var popUpWindow:IFlexDisplayObject;
	  		
	  		[Embed(source="/assets/info_icon.png")]
        	private var _iconWarning:Class;
        	
	  		[Bindable]
 	  		private var _servUrl:String = null;
	  		[Bindable]
	  		private var _openedResidence:Boolean = false;
	  		[Bindable]
	  		private var _openedResult:Boolean = false;
	  		[Bindable]
	  		private var _openedAccident:Boolean = false;
	  		[Bindable]
	  		private var _openedDamage:Boolean = false;
	  		
	  		private var _recapGenerali:RecapGenerali = new RecapGenerali();		
	  		private var _logger:DefaultLogger = LogFactory.getLogger("com.generali.degatDesEaux.views");
	  		
			private function init():void
			{
				_servUrl = Util.getServerUrl();
				//PMA-DEBUT
	    		//_logger.logInfo("Connexion au serveur GFB OK");
	    		
	    		_cmd = DeclarationSinistreMrhCommand.getInstance(_servUrl);
	    		
	    		_cmd.addEventListener(DeclarationSinistreMrhEventResult.RESULT, result);
				_cmd.addEventListener(FaultEvent.FAULT, fault);

    			//service.addRemoteEventListener(DeclarationMrhRemoteService.REMOTE_KEY_DECLARER_DEGATS_DES_EAUX, showAddResult, showAddFault);
    			//PMA-FIN
					
			}
			
			private function prev():void
			{	  
	  			this.dispatchEvent( new NextSectionEvent(NextSectionEvent.TO_SINISTRE));
	  		}	
	  		  		
	  		private function validate():void
	  		{
	  			validateButton.enabled = false;
	  			//httServ.send(getModelData());
				showProgress();
				populateDegatDesEauxDto();
				trace("Envoi des données au serveur: " + this._servUrl);
				_cmd.execute(DeclarationMrhRemoteService.DEGAT_DES_EAUX, degatsDesEauxDto);
	  		}
	  		


	  		private function populateDegatDesEauxDto():void 
	  		{
	  			//**ASSURE**//	  		
	  			assureDto.isCourtier = _appModel.insured.isCourtier;	
          		assureDto.reseau = Application.application.parameters.reseau;		
				assureDto.nom = _appModel.insured.last_name;
				assureDto.prenom = _appModel.insured.first_name;
				assureDto.adresse = _appModel.insured.address.addressVal;
				assureDto.codePostal = _appModel.insured.address.postal_code;
				assureDto.ville = _appModel.insured.address.city;
				//assureDto.qualite = _appModel.insured.quality.toString();
				assureDto.email = _appModel.insured.mail;
				assureDto.telephoneMobile = _appModel.insured.mobile_number;
				assureDto.telephoneDomicile = _appModel.insured.house_number;
				assureDto.telephoneBureau = _appModel.insured.work_number;
				
				assureDto.numeroContrat = _appModel.insured.contract_number;
				assureDto.numeroClient = _appModel.insured.client_number;
				assureDto.idRceClient = Application.application.parameters.idClientRCE					  		
				assureDto.codePortefeuille = Application.application.parameters.codePortefeuille;
				assureDto.codeCompagnie = Application.application.parameters.codeCompagnie;
				degatsDesEauxDto.assure = assureDto;
				/*
				degatsDesEauxDto.origine = Application.application.parameters.origineDeclaration;
				originedeDeclaration._typeOrigine = Application.application.parameters.origineDeclaration;
				degatsDesEauxDto.origine = originedeDeclaration;
				*/
				//originedeDeclaration._typeOrigine = Application.application.parameters.origineDeclaration;
				//degatsDesEauxDto.origineString = Application.application.parameters.origineDeclaration;
				degatsDesEauxDto.origine = Application.application.parameters.origineDeclaration; 
												
				// Si le parametre "mode" est à "test" alors changement de l'adresse du client
				browserManager = BrowserManager.getInstance();
	            if (URLUtil.stringToObject(browserManager.fragment).mode == Util.MODE_TEST){
					degatsDesEauxDto.mailTrieste = Util.SUIVI_PROD_MAIL_ESPACE_CLIENT;
	            }else{
					degatsDesEauxDto.mailTrieste = Application.application.parameters.mailTo;
	            }							
				
				//Conversion d'un string en date
				var dateAccident:Date = DateField.stringToDate(_appModel.accident.accidentDate, "DD/MM/YYYY");
				degatsDesEauxDto.dateSinistre = dateAccident;
				//**Résidence secondaire**//
				bienInputDto.isResidencePrincipale = _appModel.residence.main_residence;
				bienInputDto.adresse = _appModel.residence.address.addressVal;
				bienInputDto.codePostal = _appModel.residence.address.postal_code;
				bienInputDto.ville = _appModel.residence.address.city;
				degatsDesEauxDto.bien = bienInputDto;
				//**ACCIDENT**//
				var causes:ArrayCollection = new ArrayCollection();
				
				if (_appModel.accident.cause1) {
					var cause1:String = "Fuite d'une canalisation, d'un tuyau";
					causes.addItem(cause1);
				}
				
				if (_appModel.accident.cause2) {
					var cause2:String = "Fuite ou débordement de gouttières";
					causes.addItem(cause2);
				}
				
				if (_appModel.accident.cause3) {
					var cause3:String = "Débordement d'appareils (évier, lavabo, machine à laver...)";
					causes.addItem(cause3);
				}
				
				if (_appModel.accident.cause4) {
					var cause4:String = "Débordement ou renversement de récipients (bassine, seau, aquarium...)";
					causes.addItem(cause4);
				}
				
				if (_appModel.accident.cause7) {
					degatsDesEauxDto.autreCause = _appModel.accident.other6;
					var cause7:String = "Cause inconnue";
					causes.addItem(cause7);	
				}											

				degatsDesEauxDto.causes = causes;
				
				if (_appModel.accident.cause5 == true) 
				{
					var infiltrations:ArrayCollection = new ArrayCollection();
					
					if (_appModel.accident.cause51) {
					var infiltration1:String = "Toiture";
					infiltrations.addItem(infiltration1);
					}
					
					if (_appModel.accident.cause52) {
						var infiltration2:String = "Terrasse";
						infiltrations.addItem(infiltration2);
					}
					
					if (_appModel.accident.cause53) {
						var infiltration3:String = "Façade";
						infiltrations.addItem(infiltration3);
					}
					
					
					if (_appModel.accident.cause54) {
						var infiltration4:String = "Balcon";
						infiltrations.addItem(infiltration4);
					}
					
					if (_appModel.accident.cause55) {
						var infiltration5:String = "other55";
						infiltrations.addItem(infiltration5);
					}
					
					degatsDesEauxDto.infiltrations = infiltrations;
				}		
					
				//Origine sinistre
				var originStg:String=null;
				if(_appModel.accident.origin == 1)
					originStg = "Dans les locaux occupés par l'assuré";
				else if(_appModel.accident.origin==2)
					originStg = "Dans les parties communes de l'immeuble";
				else if(_appModel.accident.origin==3)
					originStg = "Dans un appartement voisin";
				else if(_appModel.accident.origin==4)
					originStg = "Dans un immeuble voisin";
				else if(_appModel.accident.origin==5)
					originStg = _appModel.accident.otherOrigin;
				
				if(originStg!=null)
					degatsDesEauxDto.origineSinistre = originStg;
				
				//degatsDesEauxDto.isCauseReparee = _appModel.accident.fixable?"Oui":"Non";
				degatsDesEauxDto.isCauseReparee = _appModel.accident.fixable;
				
				//**LES CONSEQUENCES**//
				degatsDesEauxDto.isDommageSubi = _appModel.result.has_damage;
				
				// Gestion des dommages subis par des tiers
				 switch (_appModel.result.other_person) { 
					case EnumTypePersonneTouche.OUI : degatsDesEauxDto.isDommageSubiParTiers = "oui"; break;
					case EnumTypePersonneTouche.NON : degatsDesEauxDto.isDommageSubiParTiers = "non"; break;
					case EnumTypePersonneTouche.JE_NE_SAIS_PAS : degatsDesEauxDto.isDommageSubiParTiers = "ne sais pas"; break;
				} 
				
				degatsDesEauxDto.nomTiers = _appModel.result.last_name;
				degatsDesEauxDto.prenomTiers = _appModel.result.first_name;
				degatsDesEauxDto.adresseTiers= _appModel.result.address.addressVal;
				degatsDesEauxDto.codePostalTiers = _appModel.result.address.postal_code;
				degatsDesEauxDto.villeTiers = _appModel.result.address.city;
				degatsDesEauxDto.assureurTiers = _appModel.result.insurer;
				//**LES DOMMAGES**//
				var pieces:ArrayCollection= new ArrayCollection();
				//var _pieceMap:HashMap = new HashMap();
				var index:int = 1;
				var ind:String = 'piece' + index.toString();
				while (index <= _appModel.damage.pieceMap.size())
				{
					if (_appModel.damage.getPieceById(ind) != null) 
					{
						var pieceInputDto:PieceInputDto = new PieceInputDto();
						
						pieceInputDto.typePiece = _appModel.damage.getPieceById(ind).type_piece;
						pieceInputDto.nom = _appModel.damage.getPieceById(ind).name;
						pieceInputDto.longueur= _appModel.damage.getPieceById(ind).longueur;
						pieceInputDto.largeur = _appModel.damage.getPieceById(ind).largeur;
						
						pieceInputDto.murPapierPeint= _appModel.damage.getPieceById(ind).wall.papier_peint;
						pieceInputDto.murPeinture = _appModel.damage.getPieceById(ind).wall.peinture;
						pieceInputDto.murAutre = _appModel.damage.getPieceById(ind).wall.autre;
						pieceInputDto.murSurfaceAutre = _appModel.damage.getPieceById(ind).wall.autreVAL;
						
						pieceInputDto.plafondPapierPeint = _appModel.damage.getPieceById(ind).plafond.papier_peint;
						pieceInputDto.plafondPeinture = _appModel.damage.getPieceById(ind).plafond.peinture;
						pieceInputDto.plafondAutre = _appModel.damage.getPieceById(ind).plafond.autre;
						pieceInputDto.plafondSurfaceAutre = _appModel.damage.getPieceById(ind).plafond.autreVAL;
						
						pieceInputDto.mobilierEndommage = _appModel.damage.getPieceById(ind).mobilier.mobilierDetails;
						
						pieceInputDto.solParquet= _appModel.damage.getPieceById(ind).sol.parquet;
						pieceInputDto.solCarrelage = _appModel.damage.getPieceById(ind).sol.carrelage
						pieceInputDto.solMoquette = _appModel.damage.getPieceById(ind).sol.moquette;
						pieceInputDto.solRevetementPlastique = _appModel.damage.getPieceById(ind).sol.revetement;
						pieceInputDto.solAutre = _appModel.damage.getPieceById(ind).sol.autre;
						pieceInputDto.solAutreSurface = _appModel.damage.getPieceById(ind).sol.autreVAL;
					
						pieceInputDto.commentaire = _appModel.damage.getPieceById(ind).pieceDetails;
						pieces.addItem(pieceInputDto);
					}
					index = index +1;
					ind = 'piece' + index.toString();
				}
				
				degatsDesEauxDto.nbPiecesEndommagees = _appModel.damage.pieceMap.size();
				degatsDesEauxDto.pieces = pieces;								
	  		}

	  		
	  		
			private function fault(e:FaultEvent):void
			{
				removeProgess();
				_recapGenerali.faultHandler(e);
				if (_logger.isError()) {
					_logger.logError("Error Occurred. Code: " + e.fault.faultCode.toString() + " FaultString: " + e.fault.faultString  + " FaulDetail: " + e.fault.faultDetail);
				}
				
				Tracker.getInstance().trackView("mrhdegatdeseauxetape4recapitulatifbiserreur");
			}
			
			private function removeProgess():void
			{
				PopUpManager.removePopUp(popUpWindow);
				validateButton.enabled=true;
			}
			
			private function result(event:DeclarationSinistreMrhEventResult):void
			{
				removeProgess();
				parentApplication.dispatchEvent(new NextSectionEvent(NextSectionEvent.TO_FINAL));
			}
			private function showProgress():void
			{
				popUpWindow = PopUpManager.createPopUp(this,DummyTitleWindow,false);
		        PopUpManager.centerPopUp(popUpWindow); 
			}
 			public function openCloseResidence():void	
 			{ 
 				if (Residence.height < 10){
 					effect.heightTo = 125;
 					effect.play([Residence]);
 					_openedResidence = true;
 				}
 				else{
 					effect.heightTo = -2;
 					effect.play([Residence]);
 					_openedResidence = false;
 				}
 			}
 			
 			public function openCloseAccident():void	
 			{ 
 				if (Accident.height < 10){
 					effect.heightTo = 320;
 					effect.play([Accident]);
 					_openedAccident = true;
 				}
 				else{
 					effect.heightTo = -2;
 					effect.play([Accident]);
 					_openedAccident = false;
 				}
 			}
 			
 			public function openCloseResult():void	
 			{ 
 				if (Result.height < 10){
 					effect.heightTo = 180;
 					effect.play([Result]);
 					_openedResult = true;
 				}
 				else{
 					effect.heightTo = -2;
 					effect.play([Result]);
 					_openedResult = false;
 				}
 			}
 			
 			public function openCloseDamage():void	
 			{ 
 				if (Damage.height < 10){
 					effect.heightTo = 270;
 					effect.play([Damage]);
 					_openedDamage = true;
 				}
 				else{
 					effect.heightTo = -2;
 					effect.play([Damage]);
 					_openedDamage = false;
 				}
 			}
 			private function annuler():void
 			{
 				Alert.okLabel="oui";
				Alert.cancelLabel = "non";
				Alert.buttonWidth = 120;	 			
	 			Alert.show(RecapGenerali.MSG_ANNULATION,"CONFIRMATION",
	 			Alert.OK | Alert.CANCEL, this, confirmDelete,_iconWarning, Alert.OK);
 			}
 			
	  		private function confirmDelete(event:CloseEvent):void
	  		{
	  			if (event.detail == Alert.OK)
  				{	
  					 var u:URLRequest = new URLRequest(Util.getCancelUrl());
       				 navigateToURL(u,"_self");
       				 validateButton.enabled = false;
       				 _appModel.clear();
	 			}
	  		}
	  	
	  	]]>
	  </mx:Script>
	  <mx:Resize id="effect" duration="800"/>
	<!--	  
	<mx:HTTPService id="httServ" 
		url="{_servUrl}" 
		result="result(event)" 
		fault="fault(event)"
		method="POST"
		requestTimeout="15"
		showBusyCursor="true"
	/>
	-->
	
	<mx:VBox id="VRecap" height="100%" width="100%" horizontalAlign="center" verticalAlign="middle">
		<views:RecapInsuredContract insuredModel="{_appModel.insured}" width="650" />
		
		
		<mx:ApplicationControlBar horizontalAlign="left"  width="650"  click="openCloseResidence()">
	  		<mx:Image source="{(_openedResidence)?_iconOpen:_iconClose}"  />
	  		<mx:Label styleName="simpleBold" text="Le bien concerné" id="lblResidence"  rollOver="_recapGenerali.styleText(lblResidence)" rollOut="_recapGenerali.styleTextOut(lblResidence)" />
	  	</mx:ApplicationControlBar>
		<recap:RecapResidence id="Residence" width="650"  height="-2"/>
		
		<mx:ApplicationControlBar horizontalAlign="left"  width="650"  click="openCloseAccident()" >
	  		<mx:Image source="{(_openedAccident)?_iconOpen:_iconClose}"/>
	  		<mx:Label styleName="simpleBold" text="Le sinistre" id="lblAccident"  rollOver="_recapGenerali.styleText(lblAccident)" rollOut="_recapGenerali.styleTextOut(lblAccident)" />
	  	</mx:ApplicationControlBar>
		<recap:RecapAccident id="Accident" width="650"  height="-2"/>
		
		<mx:ApplicationControlBar horizontalAlign="left"  width="650" click="openCloseResult()" >
	  		<mx:Image source="{(_openedResult)?_iconOpen:_iconClose}" />
	  		<mx:Label styleName="simpleBold" text="Les conséquences" id="lblResult"   rollOver="_recapGenerali.styleText(lblResult)" rollOut="_recapGenerali.styleTextOut(lblResult)" />
	  	</mx:ApplicationControlBar>
		<recap:RecapResult id="Result" width="650"  height="-2"/>
			<mx:VBox  visible="{((_appModel.result.has_damage)?true:false)}">
			<mx:ApplicationControlBar horizontalAlign="left"  width="650" click="openCloseDamage()"  height="{((_appModel.result.has_damage)?30:0)}">
		  		<mx:Image source="{(_openedDamage)?_iconOpen:_iconClose}"  />
		  		<mx:Label styleName="simpleBold" text="Les dommages" id="lblDamage"   rollOver="_recapGenerali.styleText(lblDamage)" rollOut="_recapGenerali.styleTextOut(lblDamage)" />
		  	</mx:ApplicationControlBar>
			<recap:RecapDamage id="Damage" width="650"  height="-2"/>
		</mx:VBox>
		<mx:TextArea width="650" borderStyle="none" editable="false" styleName="simple" backgroundAlpha="0" height="55"
		text="L’enregistrement de cette déclaration ne constitue pas un accord de prise en charge, ni une appréciation des responsabilités. Il vous incombe de conserver tous les éléments permettant la constatation et l’estimation de vos dommages.  "/>
	</mx:VBox>

	<mx:HBox width="100%">
		<mx:Button width="120"  styleName="NavButton" label="Etape précédente" id="prevB" click="prev()" />
		<mx:Spacer width="100%"/>
		<mx:Button label="Annuler" width="120"  styleName="NavButton" click="annuler()"/>
	  	  <mx:Spacer width="10"/>
	  <mx:Button  label="Valider" width="120"  styleName="NavButton"  click="validate()" enabled="true" id="validateButton"/>
	</mx:HBox>
</mx:Panel>
