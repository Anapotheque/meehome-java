<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" verticalGap="0" width="80%"  verticalScrollPolicy="off" height="0" borderStyle="solid" 
	borderColor="red" visible="false">
	<mx:Script>
		<![CDATA[
			import com.flexriver.common.validators.FlexriverValidators;
			import mx.controls.TextInput;
			import mx.states.RemoveChild;
			import mx.validators.StringValidator;
			import mx.controls.Text;
			import mx.controls.Label;
			
			public const COLOR_ERROR:String = "#f7b1c8";
			public const COLOR_VALIDATED:String = "white";
			
			[Bindable]
			private var errors:Array=new Array();
			[Bindable]
			private var heightAll:int=0;
			
			public function validateEmptyText(obj:TextInput,strEror:String):Boolean
			{
		     	if(obj.text == "")
		     	{
	     			this.addError(strEror)
	     			obj.setStyle("backgroundColor",COLOR_ERROR);
	     			return false;
		     	}
		     	else
		     	{
	     			obj.setStyle("backgroundColor",COLOR_VALIDATED);
	     			return true;
		     	}		     	
		     }
		    public function validateTextString(obj:TextInput,strEror:String):Boolean 
		    {
		     	if(!FlexriverValidators.isAlpha(obj.text))
		     	{
		     		this.addError(strEror)
		     		obj.setStyle("backgroundColor",COLOR_ERROR);
		     		return false;
		     	}
		     	else
		     	{
		     		obj.setStyle("backgroundColor",COLOR_VALIDATED);
		     		return true;
		     	}
		     }
		   public function validateIntText5(obj:TextInput,strEror:String):Boolean 
		   {
		     	if(!FlexriverValidators.is5Digits(obj.text))
		     	{
		     		this.addError(strEror)
		     		obj.setStyle("backgroundColor",COLOR_ERROR);
		     		return false;
		     	}
		     	else
		     	{
		     		obj.setStyle("backgroundColor",COLOR_VALIDATED);
		     		return true;
		     	}
		     }
		     public function validateIntTel(obj:TextInput,strEror:String):Boolean 
		     {
		     	if(!FlexriverValidators.is10Digits(obj.text))
		     	{
		     		this.addError(strEror)
		     		obj.setStyle("backgroundColor",COLOR_ERROR);
		     		return false;
		     	}
		     	else
		     	{
		     		obj.setStyle("backgroundColor",COLOR_VALIDATED);
		     		return true;
		     	}
		     }
		   public function validateEmailText(obj:TextInput,strEror:String):Boolean 
		   {
		     	if(!FlexriverValidators.isEmail(obj.text))
		     	{
		     		this.addError(strEror)
		     		obj.setStyle("backgroundColor",COLOR_ERROR);
		     		return false;
		     	}
		     	else
		     	{
		     		obj.setStyle("backgroundColor",COLOR_VALIDATED);
		     		return true;
		     	}
		    }
		    	
			public function addError(error:String):void
			{
					this.visible = true;
					var text:Text = new Text();
					text.text = error;
					text.id = id;
					text.height=15;
					text.visible=false;	
					errors.push(text);	
					displayError.addChild(text);
			}
			
			public function play():Boolean
			{
				if(errors.length > 0)
				{
					heightAll=errors.length*16+5;
					showError.play();					
					return true;
				}
				return false;
			}
			
			public function errorExists(id:String):Boolean
			{
				for (var i:int=0;i<errors.length;i++)
				{
					if (id==(errors[i] as Text).id)
						return true;
				}
				return false;
			}
			public function prepare_validation():void
			{
				displayError.removeAllChildren()
				errors =new Array();
				this.visible =false;
				this.height = 0;
				this.heightAll=0;
			}
  		]]>
	</mx:Script>
	
	<mx:Sequence id="showError" targets="{errors}">
	  		<mx:Resize target="{this}" id="resize" heightTo="{heightAll}" duration="700"/>
	  		<mx:SetPropertyAction name="visible" value="true" />
	</mx:Sequence>
	<mx:Image source="@Embed('assets/ico_erreur_saisie.swf')" />
	<mx:VBox verticalGap="0" id="displayError" verticalScrollPolicy="off"/>

</mx:HBox>
